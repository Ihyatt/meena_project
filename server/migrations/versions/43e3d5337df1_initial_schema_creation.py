"""Initial schema creation

Revision ID: 43e3d5337df1
Revises: 
Create Date: 2025-06-12 04:05:20.444208

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '43e3d5337df1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.init_audit_logger_extension('btree_gist')
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_uuid', sa.String(length=32), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=80), nullable=False),
    sa.Column('last_name', sa.String(length=80), nullable=False),
    sa.Column('is_user', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    info={'versioned': {}}
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('email_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_uuid', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email_type', sa.Enum('THANK_YOU', 'CAMPAIGN_UPDATE', name='emailtype'), nullable=False),
    sa.Column('subject', sa.String(length=120), nullable=False),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('QUEUED', 'SENT', 'DELIVERED', 'BOUNCED', 'BLOCKED', 'SPAM', 'OPENED', 'CLICKED', 'FAILED', name='emailstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    info={'versioned': {}}
    )
    op.create_table('transaction',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('native_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('client_addr', postgresql.INET(), nullable=True),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    postgresql.ExcludeConstraint((sa.literal_column('native_transaction_id'), '='), (sa.literal_column("tsrange(issued_at - INTERVAL '1 HOUR', issued_at)"), '&&'), using='gist', name='transaction_unique_native_tx_id'),
    sa.ForeignKeyConstraint(['actor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('schema', sa.Text(), nullable=True),
    sa.Column('table_name', sa.Text(), nullable=True),
    sa.Column('relid', sa.Integer(), nullable=True),
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('native_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('verb', sa.Text(), nullable=True),
    sa.Column('old_data', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=True),
    sa.Column('changed_data', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_activity_native_transaction_id'), ['native_transaction_id'], unique=False)

    op.create_table('campaigns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_uuid', sa.String(length=32), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('target_amount', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email_template_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['email_template_id'], ['email_templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    info={'versioned': {}}
    )
    op.create_table('sent_emails',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_uuid', sa.String(length=32), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('recipient_user_id', sa.Integer(), nullable=False),
    sa.Column('recipient_email', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('QUEUED', 'SENT', 'DELIVERED', 'BOUNCED', 'BLOCKED', 'SPAM', 'OPENED', 'CLICKED', 'FAILED', name='emailstatus'), nullable=False),
    sa.Column('mailjet_message_id', sa.String(length=100), nullable=True),
    sa.Column('bounce_details', sa.Text(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['recipient_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['email_templates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mailjet_message_id'),
    info={'versioned': {}}
    )
    op.create_table('donations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_uuid', sa.String(length=32), nullable=False),
    sa.Column('donor_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('donated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['donor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    info={'versioned': {}}
    )
    op.create_table('payment_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_uuid', sa.String(length=32), nullable=False),
    sa.Column('donation_id', sa.Integer(), nullable=False),
    sa.Column('donor_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SUCCEEDED', 'FAILED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('processor_fee', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('processor_id', sa.String(length=100), nullable=True),
    sa.Column('idempotency_key', sa.String(length=64), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['donation_id'], ['donations.id'], ),
    sa.ForeignKeyConstraint(['donor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('donation_id'),
    sa.UniqueConstraint('idempotency_key'),
    info={'versioned': {}}
    )
    op.init_audit_logger_function('get_setting(setting text, fallback text)')
    op.init_audit_logger_function('jsonb_subtract(arg1 jsonb, arg2 jsonb)')
    op.init_audit_logger_function('jsonb_change_key_name(data jsonb, old_key text, new_key text)')
    op.init_audit_logger_function('create_activity()')
    op.init_audit_logger_triggers('campaigns')
    op.init_audit_logger_triggers('payment_transactions')
    op.init_audit_logger_triggers('donations')
    op.init_audit_logger_triggers('users')
    op.init_audit_logger_triggers('sent_emails')
    op.init_audit_logger_triggers('email_templates')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.remove_audit_logger_triggers('email_templates')
    op.remove_audit_logger_triggers('sent_emails')
    op.remove_audit_logger_triggers('users')
    op.remove_audit_logger_triggers('donations')
    op.remove_audit_logger_triggers('payment_transactions')
    op.remove_audit_logger_triggers('campaigns')
    op.remove_audit_logger_function('create_activity()')
    op.remove_audit_logger_function('jsonb_change_key_name(data jsonb, old_key text, new_key text)')
    op.remove_audit_logger_function('jsonb_subtract(arg1 jsonb, arg2 jsonb)')
    op.remove_audit_logger_function('get_setting(setting text, fallback text)')
    op.drop_table('payment_transactions')
    op.drop_table('donations')
    op.drop_table('sent_emails')
    op.drop_table('campaigns')
    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activity_native_transaction_id'))

    op.drop_table('activity')
    op.drop_table('transaction')
    op.drop_table('email_templates')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.remove_audit_logger_extension('btree_gist')
    # ### end Alembic commands ###
